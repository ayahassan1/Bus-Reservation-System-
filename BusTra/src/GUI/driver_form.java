package GUI;

import static Bus_Reservation_System.Bus_Reservation_System.current_busTrips;
import static Bus_Reservation_System.Bus_Reservation_System.current_driver;
import Person.Admin;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

public class driver_form extends javax.swing.JFrame {

    Admin admin = new Admin();
  
    /**
     * Creates new form driver_form
     */
    public driver_form() {
        initComponents();
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        baseside = new javax.swing.JPanel();
        accInfo = new javax.swing.JLabel();
        EditInfo = new javax.swing.JLabel();
        UpcomeTrip = new javax.swing.JLabel();
        Run_Trip = new javax.swing.JLabel();
        History = new javax.swing.JLabel();
        logOut = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        startPanel = new javax.swing.JPanel();
        Runtrip = new javax.swing.JPanel();
        runTripheader = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        runTripInfotxt = new javax.swing.JTextArea();
        upcomingPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DupcomingTripsTable = new javax.swing.JTable();
        upcomingheader = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        historyPanel = new javax.swing.JPanel();
        doneTripsheader = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DdoneTripsTable = new javax.swing.JTable();
        editInfo = new javax.swing.JPanel();
        editaccinfoheaderpanel = new javax.swing.JPanel();
        editaccinfoLabel = new javax.swing.JLabel();
        DeditEmail = new javax.swing.JLabel();
        DeditUsername1 = new javax.swing.JLabel();
        DeditPassword = new javax.swing.JLabel();
        DeditEmailtxt = new javax.swing.JTextField();
        DeditPasswordtxt = new javax.swing.JTextField();
        DeditUsernametxt = new javax.swing.JTextField();
        saveEditBtn = new javax.swing.JButton();
        DusernameErrorLabel = new javax.swing.JLabel();
        DpassErrorLabel = new javax.swing.JLabel();
        DemailErrorLabel = new javax.swing.JLabel();
        DaccInfo = new javax.swing.JPanel();
        DaccInfoPanel = new javax.swing.JPanel();
        DaccInfoLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DaccInfotxt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        baseside.setBackground(new java.awt.Color(34, 49, 63));

        accInfo.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        accInfo.setForeground(new java.awt.Color(204, 204, 204));
        accInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/accInfoicon.png"))); // NOI18N
        accInfo.setText("Account Information");
        accInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DaccInfoMousePressed(evt);
            }
        });

        EditInfo.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        EditInfo.setForeground(new java.awt.Color(204, 204, 204));
        EditInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/edit_icon.png"))); // NOI18N
        EditInfo.setText("Edit Account Information");
        EditInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EditInfoMousePressed(evt);
            }
        });

        UpcomeTrip.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        UpcomeTrip.setForeground(new java.awt.Color(204, 204, 204));
        UpcomeTrip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/view_icon.png"))); // NOI18N
        UpcomeTrip.setText("View Upcoming Trips");
        UpcomeTrip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UpcomeTripMousePressed(evt);
            }
        });

        Run_Trip.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        Run_Trip.setForeground(new java.awt.Color(204, 204, 204));
        Run_Trip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/view_icon.png"))); // NOI18N
        Run_Trip.setText("View Running Trip");
        Run_Trip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Run_TripMousePressed(evt);
            }
        });

        History.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        History.setForeground(new java.awt.Color(204, 204, 204));
        History.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/view_icon.png"))); // NOI18N
        History.setText("View History");
        History.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HistoryMousePressed(evt);
            }
        });

        logOut.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        logOut.setForeground(new java.awt.Color(204, 204, 204));
        logOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/logout_icon.png"))); // NOI18N
        logOut.setText("Log Out");
        logOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logOutMousePressed(evt);
            }
        });

        javax.swing.GroupLayout basesideLayout = new javax.swing.GroupLayout(baseside);
        baseside.setLayout(basesideLayout);
        basesideLayout.setHorizontalGroup(
            basesideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basesideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basesideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basesideLayout.createSequentialGroup()
                        .addGroup(basesideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(History, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UpcomeTrip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Run_Trip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        basesideLayout.setVerticalGroup(
            basesideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basesideLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(accInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EditInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpcomeTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Run_Trip, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(History, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        getContentPane().add(baseside);

        mainPanel.setLayout(new java.awt.CardLayout());

        startPanel.setBackground(new java.awt.Color(108, 122, 137));

        javax.swing.GroupLayout startPanelLayout = new javax.swing.GroupLayout(startPanel);
        startPanel.setLayout(startPanelLayout);
        startPanelLayout.setHorizontalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );
        startPanelLayout.setVerticalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        mainPanel.add(startPanel, "card9");

        Runtrip.setBackground(new java.awt.Color(108, 122, 137));

        runTripheader.setBackground(new java.awt.Color(34, 49, 63));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/running_icon.png"))); // NOI18N
        jLabel3.setText("   Running Trip");

        javax.swing.GroupLayout runTripheaderLayout = new javax.swing.GroupLayout(runTripheader);
        runTripheader.setLayout(runTripheaderLayout);
        runTripheaderLayout.setHorizontalGroup(
            runTripheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runTripheaderLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(327, Short.MAX_VALUE))
        );
        runTripheaderLayout.setVerticalGroup(
            runTripheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, runTripheaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );

        runTripInfotxt.setEditable(false);
        runTripInfotxt.setBackground(new java.awt.Color(108, 122, 137));
        runTripInfotxt.setColumns(20);
        runTripInfotxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        runTripInfotxt.setRows(5);
        runTripInfotxt.setBorder(null);
        jScrollPane1.setViewportView(runTripInfotxt);

        javax.swing.GroupLayout RuntripLayout = new javax.swing.GroupLayout(Runtrip);
        Runtrip.setLayout(RuntripLayout);
        RuntripLayout.setHorizontalGroup(
            RuntripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(runTripheader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RuntripLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        RuntripLayout.setVerticalGroup(
            RuntripLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RuntripLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(runTripheader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(Runtrip, "card5");

        upcomingPanel.setBackground(new java.awt.Color(108, 122, 137));

        jScrollPane3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        DupcomingTripsTable.setAutoCreateRowSorter(true);
        DupcomingTripsTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DupcomingTripsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Pick Up", "Destination", "pick Up Date", "pick Up Time", "Arrival Date", "Arrival Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DupcomingTripsTable.setCellSelectionEnabled(true);
        DupcomingTripsTable.setGridColor(new java.awt.Color(255, 255, 255));
        DupcomingTripsTable.setRowHeight(30);
        DupcomingTripsTable.setRowMargin(20);
        DupcomingTripsTable.setSelectionBackground(new java.awt.Color(108, 122, 137));
        DupcomingTripsTable.setShowHorizontalLines(false);
        DupcomingTripsTable.setShowVerticalLines(false);
        jScrollPane3.setViewportView(DupcomingTripsTable);
        DupcomingTripsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        upcomingheader.setBackground(new java.awt.Color(34, 49, 63));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/upcoming_icon.png"))); // NOI18N
        jLabel2.setText("   Upcoming Trips");

        javax.swing.GroupLayout upcomingheaderLayout = new javax.swing.GroupLayout(upcomingheader);
        upcomingheader.setLayout(upcomingheaderLayout);
        upcomingheaderLayout.setHorizontalGroup(
            upcomingheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upcomingheaderLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        upcomingheaderLayout.setVerticalGroup(
            upcomingheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upcomingheaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout upcomingPanelLayout = new javax.swing.GroupLayout(upcomingPanel);
        upcomingPanel.setLayout(upcomingPanelLayout);
        upcomingPanelLayout.setHorizontalGroup(
            upcomingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(upcomingheader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
        );
        upcomingPanelLayout.setVerticalGroup(
            upcomingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upcomingPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(upcomingheader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
        );

        mainPanel.add(upcomingPanel, "card4");

        historyPanel.setBackground(new java.awt.Color(108, 122, 137));

        doneTripsheader.setBackground(new java.awt.Color(34, 49, 63));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/done_icon.png"))); // NOI18N
        jLabel4.setText("   Done Trips");

        javax.swing.GroupLayout doneTripsheaderLayout = new javax.swing.GroupLayout(doneTripsheader);
        doneTripsheader.setLayout(doneTripsheaderLayout);
        doneTripsheaderLayout.setHorizontalGroup(
            doneTripsheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doneTripsheaderLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        doneTripsheaderLayout.setVerticalGroup(
            doneTripsheaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doneTripsheaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        DdoneTripsTable.setAutoCreateRowSorter(true);
        DdoneTripsTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DdoneTripsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Pick Up", "Destination", "Pick Up Date", "Pick Up Time", "Arrival Date", "Arrival Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DdoneTripsTable.setCellSelectionEnabled(true);
        DdoneTripsTable.setGridColor(new java.awt.Color(255, 255, 255));
        DdoneTripsTable.setRowHeight(30);
        DdoneTripsTable.setRowMargin(20);
        DdoneTripsTable.setSelectionBackground(new java.awt.Color(108, 122, 137));
        DdoneTripsTable.setShowHorizontalLines(false);
        DdoneTripsTable.setShowVerticalLines(false);
        jScrollPane5.setViewportView(DdoneTripsTable);
        DdoneTripsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout historyPanelLayout = new javax.swing.GroupLayout(historyPanel);
        historyPanel.setLayout(historyPanelLayout);
        historyPanelLayout.setHorizontalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(doneTripsheader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
        );
        historyPanelLayout.setVerticalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(doneTripsheader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
        );

        mainPanel.add(historyPanel, "card6");

        editInfo.setBackground(new java.awt.Color(108, 122, 137));
        editInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editaccinfoheaderpanel.setBackground(new java.awt.Color(34, 49, 63));

        editaccinfoLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        editaccinfoLabel.setForeground(new java.awt.Color(204, 204, 204));
        editaccinfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/person_icon.png"))); // NOI18N
        editaccinfoLabel.setText("Edit account information");

        javax.swing.GroupLayout editaccinfoheaderpanelLayout = new javax.swing.GroupLayout(editaccinfoheaderpanel);
        editaccinfoheaderpanel.setLayout(editaccinfoheaderpanelLayout);
        editaccinfoheaderpanelLayout.setHorizontalGroup(
            editaccinfoheaderpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editaccinfoheaderpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editaccinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(258, Short.MAX_VALUE))
        );
        editaccinfoheaderpanelLayout.setVerticalGroup(
            editaccinfoheaderpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editaccinfoheaderpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editaccinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        editInfo.add(editaccinfoheaderpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        DeditEmail.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditEmail.setText("Email");
        editInfo.add(DeditEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, -1, -1));

        DeditUsername1.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditUsername1.setText("Username");
        editInfo.add(DeditUsername1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        DeditPassword.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditPassword.setText("Password");
        editInfo.add(DeditPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));

        DeditEmailtxt.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditEmailtxt.setBorder(null);
        DeditEmailtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DeditEmailtxtFocusLost(evt);
            }
        });
        DeditEmailtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeditEmailtxtMouseClicked(evt);
            }
        });
        DeditEmailtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DeditEmailtxtKeyReleased(evt);
            }
        });
        editInfo.add(DeditEmailtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 230, -1));

        DeditPasswordtxt.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditPasswordtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        DeditPasswordtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DeditPasswordtxtFocusLost(evt);
            }
        });
        DeditPasswordtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeditPasswordtxtMouseClicked(evt);
            }
        });
        DeditPasswordtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DeditPasswordtxtKeyReleased(evt);
            }
        });
        editInfo.add(DeditPasswordtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 230, -1));

        DeditUsernametxt.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        DeditUsernametxt.setBorder(null);
        DeditUsernametxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DeditUsernametxtFocusLost(evt);
            }
        });
        DeditUsernametxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeditUsernametxtMouseClicked(evt);
            }
        });
        DeditUsernametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DeditUsernametxtKeyReleased(evt);
            }
        });
        editInfo.add(DeditUsernametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 230, -1));

        saveEditBtn.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        saveEditBtn.setText("Save");
        saveEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEditBtnActionPerformed(evt);
            }
        });
        editInfo.add(saveEditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 230, -1));

        DusernameErrorLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        editInfo.add(DusernameErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 230, 20));

        DpassErrorLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        editInfo.add(DpassErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 230, 20));

        DemailErrorLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        editInfo.add(DemailErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 230, 20));

        mainPanel.add(editInfo, "card2");

        DaccInfo.setBackground(new java.awt.Color(108, 122, 137));

        DaccInfoPanel.setBackground(new java.awt.Color(34, 49, 63));

        DaccInfoLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        DaccInfoLabel.setForeground(new java.awt.Color(204, 204, 204));
        DaccInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/person_icon.png"))); // NOI18N
        DaccInfoLabel.setText("Account Information");

        javax.swing.GroupLayout DaccInfoPanelLayout = new javax.swing.GroupLayout(DaccInfoPanel);
        DaccInfoPanel.setLayout(DaccInfoPanelLayout);
        DaccInfoPanelLayout.setHorizontalGroup(
            DaccInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DaccInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DaccInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        DaccInfoPanelLayout.setVerticalGroup(
            DaccInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DaccInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DaccInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );

        DaccInfotxt.setEditable(false);
        DaccInfotxt.setBackground(new java.awt.Color(108, 122, 137));
        DaccInfotxt.setColumns(20);
        DaccInfotxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DaccInfotxt.setRows(5);
        jScrollPane2.setViewportView(DaccInfotxt);

        javax.swing.GroupLayout DaccInfoLayout = new javax.swing.GroupLayout(DaccInfo);
        DaccInfo.setLayout(DaccInfoLayout);
        DaccInfoLayout.setHorizontalGroup(
            DaccInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DaccInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(DaccInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        DaccInfoLayout.setVerticalGroup(
            DaccInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DaccInfoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(DaccInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPanel.add(DaccInfo, "card7");

        getContentPane().add(mainPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DaccInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DaccInfoMousePressed
        setlabelcolor(accInfo);
        resetlabelcolor(EditInfo);
        resetlabelcolor(History);
        resetlabelcolor(UpcomeTrip);
        resetlabelcolor(Run_Trip);
       resetlabelcolor(logOut);
       
       String driverInfo = "Name: " + current_driver.getName()+"\n"
               +"Age: " +String.valueOf(current_driver.getAge())+"\n"
               +"Gender: "+current_driver.getGender()+"\n"
               +"National ID: "+String.valueOf(current_driver.getNationalID())+"\n"
               +"Position: "+current_driver.getPosition()+"\n"
               +"Username: "+current_driver.getUsername()+"\n"
               +"Email: : "+current_driver.getEmail()+"\n";
               
       DaccInfotxt.setText(driverInfo);
       
       DaccInfo.setVisible(true);
       editInfo.setVisible(false);
        historyPanel.setVisible(false);
        upcomingPanel.setVisible(false);
        Runtrip.setVisible(false);
         startPanel.setVisible(false);
    }//GEN-LAST:event_DaccInfoMousePressed

    private void EditInfoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditInfoMousePressed
        setlabelcolor(EditInfo);        
        resetlabelcolor(accInfo);
        resetlabelcolor(History);
        resetlabelcolor(UpcomeTrip);
        resetlabelcolor(Run_Trip);
        resetlabelcolor(logOut);
       
       DusernameErrorLabel.setText("");
       DpassErrorLabel.setText("");
       DemailErrorLabel.setText("");
    DusernameErrorLabel.setVisible(false);
    DpassErrorLabel.setVisible(false);
    DemailErrorLabel.setVisible(false);
    DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
    DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
    DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));

       DeditUsernametxt.setText(current_driver.getUsername());
        DeditPasswordtxt.setText(current_driver.getPassword());
        DeditEmailtxt.setText(current_driver.getEmail());
        saveEditBtn.setEnabled(false);
        
        editInfo.setVisible(true);
        historyPanel.setVisible(false);
        upcomingPanel.setVisible(false);
        Runtrip.setVisible(false);
        DaccInfo.setVisible(false);
         startPanel.setVisible(false);
    }//GEN-LAST:event_EditInfoMousePressed

    private void UpcomeTripMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpcomeTripMousePressed
        setlabelcolor(UpcomeTrip);
        resetlabelcolor(EditInfo);
        resetlabelcolor(accInfo);
        resetlabelcolor(History);
        resetlabelcolor(Run_Trip);
        resetlabelcolor(logOut);
        
        DefaultTableModel model = (DefaultTableModel)DupcomingTripsTable.getModel();
        
        if(model.getRowCount()!=0)
        {
            model.setRowCount(0);
        }
        
        for( int i = 0 ; i < current_busTrips.getUpcoming_trips().size(); i++)
        {
            model.addRow(new Object[]{current_busTrips.getUpcoming_trips().get(i).getCode(),
            current_busTrips.getUpcoming_trips().get(i).getPickUp(),
            current_busTrips.getUpcoming_trips().get(i).getDestination(),
            current_busTrips.getUpcoming_trips().get(i).getPickUpDate(),
            current_busTrips.getUpcoming_trips().get(i).getPickUpTime(),
            current_busTrips.getUpcoming_trips().get(i).getArrivalDate(),
            current_busTrips.getUpcoming_trips().get(i).getArrivalTime()
            });
        }
        
        upcomingPanel.setVisible(true);        
        editInfo.setVisible(false);
       DaccInfo.setVisible(false);
         historyPanel.setVisible(false);
         Runtrip.setVisible(false);
          startPanel.setVisible(false);
    }//GEN-LAST:event_UpcomeTripMousePressed

    private void Run_TripMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Run_TripMousePressed
        setlabelcolor(Run_Trip);
        resetlabelcolor(EditInfo);
        resetlabelcolor(accInfo);
        resetlabelcolor(History);
        resetlabelcolor(UpcomeTrip);
        resetlabelcolor(logOut);
        
        String runTripInfo;
        if (current_busTrips.getRunning_trip() != null)
        {
         runTripInfo = "Code: "+current_busTrips.getRunning_trip().getCode()+"\n"
                +"Pick Up Location: "+current_busTrips.getRunning_trip().getPickUp()+"\n"
                +"Destination: "+current_busTrips.getRunning_trip().getDestination()+"\n"
                +"Pick up date: "+current_busTrips.getRunning_trip().getPickUpDate()+"\n"
                +"Pick up Time: "+current_busTrips.getRunning_trip().getPickUpTime()+"\n"
                +"Arrival Date: "+current_busTrips.getRunning_trip().getArrivalDate()+"\n"
                +"Arrival Time: "+current_busTrips.getRunning_trip().getArrivalTime()+"\n";
        }
        else
        {
            runTripInfo = "You have no nunning trip.";
        }
        runTripInfotxt.setText(runTripInfo);
       
      Runtrip.setVisible(true);      
      editInfo.setVisible(false);
        historyPanel.setVisible(false);
        upcomingPanel.setVisible(false);
        startPanel.setVisible(false);
        DaccInfo.setVisible(false);
    }//GEN-LAST:event_Run_TripMousePressed

    private void HistoryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryMousePressed
        setlabelcolor(History);
        resetlabelcolor(EditInfo);
        resetlabelcolor(accInfo);
        resetlabelcolor(logOut);
        resetlabelcolor(UpcomeTrip);
        resetlabelcolor(Run_Trip);
      
           DefaultTableModel model = (DefaultTableModel)DdoneTripsTable.getModel();
           
        if(model.getRowCount()!=0)
        {
            model.setRowCount(0);
        }
           
           for( int i = 0 ; i < current_busTrips.getDone_trips().size(); i++)
        {
            model.addRow(new Object[]{current_busTrips.getDone_trips().get(i).getCode(),
            current_busTrips.getDone_trips().get(i).getPickUp(),
            current_busTrips.getDone_trips().get(i).getDestination(),
            current_busTrips.getDone_trips().get(i).getPickUpDate(),
            current_busTrips.getDone_trips().get(i).getPickUpTime(),
            current_busTrips.getDone_trips().get(i).getArrivalDate(),
            current_busTrips.getDone_trips().get(i).getArrivalTime()
            });
        }
        
        historyPanel.setVisible(true);        
        editInfo.setVisible(false);
        Runtrip.setVisible(false);
        upcomingPanel.setVisible(false);        
        DaccInfo.setVisible(false);
    }//GEN-LAST:event_HistoryMousePressed

    private void logOutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutMousePressed
       
        
    }//GEN-LAST:event_logOutMousePressed

    private void saveEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEditBtnActionPerformed

        String parsedUsername = DeditUsernametxt.getText();
        String parsedPassword = DeditPasswordtxt.getText();
        String parsedEmail = DeditEmailtxt.getText();
                
        if (!parsedUsername.equals(current_driver.getUsername()))
       current_driver.Edit_username(parsedUsername);
        
         if (!parsedPassword.equals(current_driver.getPassword()))
        current_driver.Edit_password(parsedPassword);
         
         if (!parsedEmail.equals(current_driver.getEmail()))
        current_driver.Edit_email(parsedEmail);
         
    }//GEN-LAST:event_saveEditBtnActionPerformed

    private void DeditUsernametxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DeditUsernametxtFocusLost
      
        String parsedUsername = DeditUsernametxt.getText();
        
                if(parsedUsername.equals(current_driver.getUsername()))
                {
                    DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DusernameErrorLabel.setText("");
                    DusernameErrorLabel.setVisible(false);
                }
                else
                {
                    int check = admin.check_driver_username(parsedUsername);
                    if(check==1)
                    {
                        DusernameErrorLabel.setText("Invalid username.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else if(check==2)
                    {
                        DusernameErrorLabel.setText("Username already exists.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                       
                    }
                    else
                    {
                         DusernameErrorLabel.setText("");
                        DusernameErrorLabel.setVisible(false);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));

                    }
                }
         if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditUsernametxtFocusLost

    private void DeditPasswordtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DeditPasswordtxtFocusLost
        String parsedPassword = DeditPasswordtxt.getText(); 
       
        
        if( parsedPassword.equals(current_driver.getPassword()))
                {
                    DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DpassErrorLabel.setText("");
                    DpassErrorLabel.setVisible(false);
                    
                }
                else
                {
                    if(admin.check_Password(parsedPassword)==1)
                    {
                        DpassErrorLabel.setText("Invalid password.");
                        DpassErrorLabel.setVisible(true);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DpassErrorLabel.setText("");
                        DpassErrorLabel.setVisible(false);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                     
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditPasswordtxtFocusLost

    private void DeditEmailtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DeditEmailtxtFocusLost
       
        String parsedEmail = DeditEmailtxt.getText();
        
        
        if( parsedEmail.equals(current_driver.getEmail()))
                {
                    DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DemailErrorLabel.setText("");
                    DemailErrorLabel.setVisible(false);
                    
                }
                else
                {
                    int check = admin.check_driver_email(parsedEmail);
                    if(check==1)
                    {
                        DemailErrorLabel.setText("Invalid Email.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else if(check==2)
                    {
                        DemailErrorLabel.setText("Email already exists.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DemailErrorLabel.setText("");
                        DemailErrorLabel.setVisible(false);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                        
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditEmailtxtFocusLost

    private void DeditUsernametxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeditUsernametxtMouseClicked
               
        String parsedUsername = DeditUsernametxt.getText();
        
                if(parsedUsername.equals(current_driver.getUsername()))
                {
                    DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DusernameErrorLabel.setText("");
                    DusernameErrorLabel.setVisible(false);
                    
                }
                else
                {
                    int check = admin.check_driver_username(parsedUsername);
                    if(check==1)
                    {
                        DusernameErrorLabel.setText("Invalid username.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else if(check==2)
                    {
                        DusernameErrorLabel.setText("Username already exists.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DusernameErrorLabel.setText("");
                        DusernameErrorLabel.setVisible(false);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                        
                    }
                }
                if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditUsernametxtMouseClicked

    private void DeditUsernametxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DeditUsernametxtKeyReleased
        
        String parsedUsername = DeditUsernametxt.getText();
                if(parsedUsername.equals(current_driver.getUsername()))
                {
                    DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DusernameErrorLabel.setText("");
                    DusernameErrorLabel.setVisible(false);
                    
                }
                else
                {
                    int check = admin.check_driver_username(parsedUsername);
                    if(check==1)
                    {
                        DusernameErrorLabel.setText("Invalid username.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else if(check==2)
                    {
                        DusernameErrorLabel.setText("Username already exists.");
                        DusernameErrorLabel.setVisible(true);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DusernameErrorLabel.setText("");
                        DusernameErrorLabel.setVisible(false);
                        DeditUsernametxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                        
                    }
                }
                if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditUsernametxtKeyReleased

    private void DeditPasswordtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DeditPasswordtxtKeyReleased
        String parsedPassword = DeditPasswordtxt.getText(); 
       
        if( parsedPassword.equals(current_driver.getPassword()))
                {
                    DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DpassErrorLabel.setText("");
                    DpassErrorLabel.setVisible(false);
                    
                }
                else
                {
                    if(admin.check_Password(parsedPassword)==1)
                    {
                        DpassErrorLabel.setText("Invalid password.");
                        DpassErrorLabel.setVisible(true);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                       
                    }
                    else
                    {
                         DpassErrorLabel.setText("");
                        DpassErrorLabel.setVisible(false);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                    
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditPasswordtxtKeyReleased

    private void DeditPasswordtxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeditPasswordtxtMouseClicked
        String parsedPassword = DeditPasswordtxt.getText(); 
        
        if( parsedPassword.equals(current_driver.getPassword()))
                {
                    DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DpassErrorLabel.setText("");
                    DpassErrorLabel.setVisible(false);
                    
                }
                else
                {
                    if(admin.check_Password(parsedPassword)==1)
                    {
                        DpassErrorLabel.setText("Invalid password.");
                        DpassErrorLabel.setVisible(true);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                       
                    }
                    else
                    {
                         DpassErrorLabel.setText("");
                        DpassErrorLabel.setVisible(false);
                        DeditPasswordtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                        
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditPasswordtxtMouseClicked

    private void DeditEmailtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DeditEmailtxtKeyReleased
       
        String parsedEmail = DeditEmailtxt.getText();
        
        if( parsedEmail.equals(current_driver.getEmail()))
                {
                    DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DemailErrorLabel.setText("");
                    DemailErrorLabel.setVisible(false);
                   
                }
                else
                {
                    int check = admin.check_driver_email(parsedEmail);
                    if(check==1)
                    {
                        DemailErrorLabel.setText("Invalid Email.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else if(check==2)
                    {
                        DemailErrorLabel.setText("Email already exists.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DemailErrorLabel.setText("");
                        DemailErrorLabel.setVisible(false);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                 
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditEmailtxtKeyReleased

    private void DeditEmailtxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeditEmailtxtMouseClicked
        
        String parsedEmail = DeditEmailtxt.getText();
        
        if( parsedEmail.equals(current_driver.getEmail()))
                {
                    DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#013243")));
                    DemailErrorLabel.setText("");
                    DemailErrorLabel.setVisible(false);
                  
                }
                else
                {
                    int check = admin.check_driver_email(parsedEmail);
                    if(check==1)
                    {
                        DemailErrorLabel.setText("Invalid Email.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                       
                    }
                    else if(check==2)
                    {
                        DemailErrorLabel.setText("Email already exists.");
                        DemailErrorLabel.setVisible(true);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#FF0000")));
                        
                    }
                    else
                    {
                         DemailErrorLabel.setText("");
                        DemailErrorLabel.setVisible(false);
                        DeditEmailtxt.setBorder(BorderFactory.createLineBorder(Color.decode("#4DBD33")));
                      
                    }
                }
        if(!DusernameErrorLabel.isVisible()&&!DpassErrorLabel.isVisible()&&!DemailErrorLabel.isVisible())
                        {
                        saveEditBtn.setEnabled(true);
                        }
         else
         {
             saveEditBtn.setEnabled(false);
         }
    }//GEN-LAST:event_DeditEmailtxtMouseClicked
 
    
    
    public void setlabelcolor(JLabel lbl){
    lbl.setForeground( new Color(0, 181, 204));
}
    public void resetlabelcolor(JLabel lbl){
    lbl.setForeground( new Color(204,204,204));
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(driver_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(driver_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(driver_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(driver_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new driver_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DaccInfo;
    private javax.swing.JLabel DaccInfoLabel;
    private javax.swing.JPanel DaccInfoPanel;
    private javax.swing.JTextArea DaccInfotxt;
    private javax.swing.JTable DdoneTripsTable;
    private javax.swing.JLabel DeditEmail;
    private javax.swing.JTextField DeditEmailtxt;
    private javax.swing.JLabel DeditPassword;
    private javax.swing.JTextField DeditPasswordtxt;
    private javax.swing.JLabel DeditUsername1;
    private javax.swing.JTextField DeditUsernametxt;
    private javax.swing.JLabel DemailErrorLabel;
    private javax.swing.JLabel DpassErrorLabel;
    private javax.swing.JTable DupcomingTripsTable;
    private javax.swing.JLabel DusernameErrorLabel;
    private javax.swing.JLabel EditInfo;
    private javax.swing.JLabel History;
    private javax.swing.JLabel Run_Trip;
    private javax.swing.JPanel Runtrip;
    private javax.swing.JLabel UpcomeTrip;
    private javax.swing.JLabel accInfo;
    private javax.swing.JPanel baseside;
    private javax.swing.JPanel doneTripsheader;
    private javax.swing.JPanel editInfo;
    private javax.swing.JLabel editaccinfoLabel;
    private javax.swing.JPanel editaccinfoheaderpanel;
    private javax.swing.JPanel historyPanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel logOut;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextArea runTripInfotxt;
    private javax.swing.JPanel runTripheader;
    private javax.swing.JButton saveEditBtn;
    private javax.swing.JPanel startPanel;
    private javax.swing.JPanel upcomingPanel;
    private javax.swing.JPanel upcomingheader;
    // End of variables declaration//GEN-END:variables
}
